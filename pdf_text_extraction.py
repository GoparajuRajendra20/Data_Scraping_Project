# -*- coding: utf-8 -*-
"""pdf_extraction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tHknGoVd-c0L2zhiPcXlK-ue9Brwf7Uw
"""

import fitz  # PyMuPDF


def extract_text_from_pdf(path):
    pdf_path = ""
    pdf_path = path

    pdf_document = fitz.open(pdf_path)

    text = ""
    for page_num in range(pdf_document.page_count):
        page = pdf_document.load_page(page_num)
        text += page.get_text()
        text = page.get_text()

    keyword = 'PROJECTS'
    projects = ""
    if keyword in text:
        projects = text[text.index(keyword):]


    pdf_document = fitz.open(pdf_path)

    certifications_work_experience_projects_text = ""
    start_keyword = "Certifications"  # Assuming certifications follow this label

    for page_num in range(pdf_document.page_count):
        page = pdf_document.load_page(page_num)
        text = page.get_text()


        if start_keyword in text:
            # Extract text from the line mentioning certifications onward
            certifications_work_experience_projects_text = text[text.index(start_keyword):]
            break

    # Display or further process the extracted certifications section
    pdf_document = fitz.open(pdf_path)

    work_experience_projects_text = ""
    start_keyword = "WORK EXPERIENCE"

    for page_num in range(pdf_document.page_count):
        page = pdf_document.load_page(page_num)
        text = page.get_text()

        if start_keyword in text:
            work_experience_projects_text = text[text.index(start_keyword):]
            break


    pdf_document = fitz.open(pdf_path)

    gpa_text = ""
    is_gpa_section = False
    start_keyword = "GPA"  # Assuming the section with GPA starts with this keyword

    for page_num in range(pdf_document.page_count):
        page = pdf_document.load_page(page_num)
        text = page.get_text("text")

        lines = text.split('\n')
        for line in lines:
            if start_keyword in line:
                gpa_text += line
                is_gpa_section = True
                break

            if is_gpa_section:
                gpa_text += line
                break

    content = {
        "work_experience_and_projects": work_experience_projects_text,
        "gpa": gpa_text,
        "projects": projects
    }
    # Display or further process the extracted GPA section
    return content
